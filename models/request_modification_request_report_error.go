package models
type RequestModificationRequestReportError int

const (
    ADMIN_GROUP_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR RequestModificationRequestReportError = iota
    AUDITOR_GROUP_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
    GROUP_FULFILLS_GLOBAL_ROLE_REQUESTMODIFICATIONREQUESTREPORTERROR
    GROUP_OWNS_OR_HELPDESKS_DIRECTORY_REQUESTMODIFICATIONREQUESTREPORTERROR
    GROUP_OWNS_OR_ADMINS_SYSTEM_REQUESTMODIFICATIONREQUESTREPORTERROR
    GROUP_OWNS_OU_REQUESTMODIFICATIONREQUESTREPORTERROR
    GROUP_PART_OF_NESTING_TREE_REQUESTMODIFICATIONREQUESTREPORTERROR
    MANAGER_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
    MULTIPLE_OUS_REQUESTMODIFICATIONREQUESTREPORTERROR
    ONE_MOVEABLE_VAULT_ACCESS_OF_MULTIPLE_MEMBERS_REQUESTMODIFICATIONREQUESTREPORTERROR
    ZERO_MOVEABLE_VAULT_ACCESS_MEMBERS_REQUESTMODIFICATIONREQUESTREPORTERROR
)

func (i RequestModificationRequestReportError) String() string {
    return []string{"ADMIN_GROUP_CANNOT_BE_MOVED", "AUDITOR_GROUP_CANNOT_BE_MOVED", "GROUP_FULFILLS_GLOBAL_ROLE", "GROUP_OWNS_OR_HELPDESKS_DIRECTORY", "GROUP_OWNS_OR_ADMINS_SYSTEM", "GROUP_OWNS_OU", "GROUP_PART_OF_NESTING_TREE", "MANAGER_CANNOT_BE_MOVED", "MULTIPLE_OUS", "ONE_MOVEABLE_VAULT_ACCESS_OF_MULTIPLE_MEMBERS", "ZERO_MOVEABLE_VAULT_ACCESS_MEMBERS"}[i]
}
func ParseRequestModificationRequestReportError(v string) (any, error) {
    result := ADMIN_GROUP_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
    switch v {
        case "ADMIN_GROUP_CANNOT_BE_MOVED":
            result = ADMIN_GROUP_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "AUDITOR_GROUP_CANNOT_BE_MOVED":
            result = AUDITOR_GROUP_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "GROUP_FULFILLS_GLOBAL_ROLE":
            result = GROUP_FULFILLS_GLOBAL_ROLE_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "GROUP_OWNS_OR_HELPDESKS_DIRECTORY":
            result = GROUP_OWNS_OR_HELPDESKS_DIRECTORY_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "GROUP_OWNS_OR_ADMINS_SYSTEM":
            result = GROUP_OWNS_OR_ADMINS_SYSTEM_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "GROUP_OWNS_OU":
            result = GROUP_OWNS_OU_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "GROUP_PART_OF_NESTING_TREE":
            result = GROUP_PART_OF_NESTING_TREE_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "MANAGER_CANNOT_BE_MOVED":
            result = MANAGER_CANNOT_BE_MOVED_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "MULTIPLE_OUS":
            result = MULTIPLE_OUS_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "ONE_MOVEABLE_VAULT_ACCESS_OF_MULTIPLE_MEMBERS":
            result = ONE_MOVEABLE_VAULT_ACCESS_OF_MULTIPLE_MEMBERS_REQUESTMODIFICATIONREQUESTREPORTERROR
        case "ZERO_MOVEABLE_VAULT_ACCESS_MEMBERS":
            result = ZERO_MOVEABLE_VAULT_ACCESS_MEMBERS_REQUESTMODIFICATIONREQUESTREPORTERROR
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeRequestModificationRequestReportError(values []RequestModificationRequestReportError) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i RequestModificationRequestReportError) isMultiValue() bool {
    return false
}
